name: ci
on:
  push:
    branches:
      - '*'

jobs:
  build:
    if: ${{ !startsWith(github.event.head_commit.message, 'chore(release):') }}

    uses: tiagocavaco/google-maps-draw-shape-lib/.github/workflows/build.yml@main

  bump:
    name: Bump version
    
    if: |
      github.ref == 'refs/heads/main' && 
      (
        startsWith(github.event.head_commit.message, 'feat') || 
        startsWith(github.event.head_commit.message, 'fix') ||
        startsWith(github.event.head_commit.message, 'docs') ||
        startsWith(github.event.head_commit.message, 'perf') ||
        startsWith(github.event.head_commit.message, 'build') ||
        startsWith(github.event.head_commit.message, 'revert')
      )
    
    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GHP_TOKEN }}

      - name: Use Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1

      - name: Configure committer
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Standard-version
        run: yarn release

      - name: Push bumped version files and tag
        run: git push --follow-tags origin main

  npm:
    name: Publish package to npm

    needs: bump

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: 'main'      

      - name: Use Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1

      - name: Build
        run: yarn build

      - name: Publish
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          



